# -*- coding: utf-8 -*-
"""PTDLUD#7_DATH#1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LNcZ9PXdZTAfu0oFH4EaHy3laWN2ybTG

# ĐỒ ÁN THỰC HÀNH 1
THÔNG TIN NHÓM

NHÓM:PTDLUD#7

| STT | MSSV | Họ Và Tên | Phân công | Đóng góp |
| --- | --- | --- | --- | --- |
| 1 | 19120680 | Ninh Việt Tiến | <ul> <li>Quan sát và mô tả dữ liệu</li></ul> | 25% |
| 2 | 19120689 | Lại Khánh Toàn | <ul> <li>Quan sát và mô tả dữ liệu</li></ul> | 25% |
| 3 | 19120693 | Trần Trọng Trí | <ul> <li>Visualize dữ liệu dạng bảng hoặc đồ thị</li></ul> | 25% |
| 4 | 19120719 | Nguyễn Phước Vinh | <ul> <li>Visualize dữ liệu dạng bảng hoặc đồ thị</li></ul> | 25% |

Link colab: https://colab.research.google.com/drive/1LNcZ9PXdZTAfu0oFH4EaHy3laWN2ybTG?usp=sharing

**Quan sát và mô tả dữ liệu**

1. Cho biết kiểu dữ liệu của các thuộc tính
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

df = pd.read_csv('/content/AB_NYC_2019.csv')
df.dataframeName = 'AB_NYC_2019.csv'
df

"""Thống kê kiểu dữ liệu của 16 cột thuộc tính"""

df.info()

"""2. Đối với cột Price, cho biết:
- Giá phòng cao nhất, thấp nhất, giá phòng trung bình, mức giá xuất hiện
nhiều
- Độ lệch chuẩn của cột price?
- Cho biết giá phòng phân phối xung quanh trung tâm hay cách xa trung
tâm? Nhận xét về giá trị mean và median của tập dữ liệu.
- Vẽ đồ thị histogram để nhận xét dữ liệu có bị lệch không?
"""

df['price'].describe()

df['price'].mode()

df['price'].median()

"""Dựa vào thống kê ở trên ta có thể thấy các thông tin:
- Giá phòng cao nhất: 10000.0
- Giá phòng thấp nhất: 0.0
- Giá phòng trung bình: 152.7
- Mức giá xuất hiện nhiều nhất: 0 và 100
- Độ lệch chuẩn của cột **price**: 240.2
- Median của dữ liệu: 106.0
"""

sns.set_style('darkgrid')
viz3 = sns.distplot(df['price'])

price_df = df[df['price'] < 1000]
sns.set_style('darkgrid')
tmp1 = sns.distplot(price_df['price'])

"""- Từ các đồ thị trên ta thấy dữ liệu (phân phối giá phòng) có xu hướng cách xa trung tâm
- Giá trị mean > median nên đồ thị thuộc dạng lệch phải
- Biểu đồ histogram được thể hiện dựa trên giá phòng theo thứ tự price < 10000, price < 1000 và price < 350.

3. Mô tả số lượng missing value của mỗi thuộc tính
"""

print(f'Số lượng missing value cho các thuộc tính:')
df.isnull().sum()

"""Ta thấy giữa các thuộc tính trung bình lượng missing value chỉ có ít, ngoại trừ 2 thuộc tính **last_review** và **reviews_per_month** thì số lượng missing ở đây khá cao.

4. Tính tỷ lệ % missing value của mỗi thuộc tính
"""

print(f'Tỉ lệ % missing value của mỗi thuộc tính')
for column in df.columns:
  percentage = np.round(df[column].isnull().mean() * 100, 2)
  print(f'{column}: {percentage}%')

"""5. Xử lý dữ liệu missing (nhóm sinh viên tự đề xuất giữa remove hoặc fill giá trị
missing value). GIải thích lý do.

- Hướng xử lý dữ liệu missing: ở đây nhóm em sẽ tiến hành điền giá trị trung bình vào missing value ở cột **reviews_per_month** và điền giá trị liền trước ở cột **last_review**.
- Giải thích: vì như thống kê ở trên dữ liệu bị thiếu quá lớn chiếm 20% nên không thể bỏ các dòng đó đi được, gây mất mát với các cột dữ liệu liên quan.
"""

# Lấy ra giá trị trung bình của cột reviews_per_month
reviews_per_month_mean = np.round(df['reviews_per_month'].mean(),2)
reviews_per_month_mean

df['reviews_per_month'].fillna(reviews_per_month_mean, inplace=True)
df

df['last_review'].fillna(method='ffill', inplace=True)
df

"""6. Outlier: sử dụng đồ thị boxplot để quan sát cột Price có tồn tại outlier không?"""

viz1 = df.boxplot(column=['price'])

"""Từ đồ thị boxplot trên ta thấy dữ liệu price xuất hiện nhiều outlier nên ta sẽ tiến hành loại bỏ bớt các outlier."""

pr_df = df[df['price'] < 350]
viz2 = pr_df.boxplot(column=['price'])

"""**Visualize dữ liệu dạng bảng hoặc đồ thị:**

1. Có bao nhiêu “neighbourhood_group”, liệt kê không trùng danh sách này. Lập
bảng thống kê gồm neighbourhood_group, tần suất, % lượt thuê phòng của
mỗi neighbourhood_group.
"""

neighbourhood_group = df['neighbourhood_group']
neighbourhood_list =  list(set(neighbourhood_group))
print('Số lượng neighbourhood_group: ', len(neighbourhood_list))
print('Liệt kê:', neighbourhood_list)

#Group theo neighbourhood_group và tổng số lượng lượt khách
group2 = df.groupby('neighbourhood_group')['id'].count().reset_index()
group2.rename(columns={'id': 'customer_number'}, inplace=True)
#Tính phần trăm
group2['percentage'] = group2['customer_number'] / group2['customer_number'].sum() * 100
group2

"""2. Có bao nhiêu room_type, liệt kê không trùng. Lập bảng thống kê room_type,
tần suất và % lượt thuê cho từng room_type. Vẽ bar chart để so sánh.
"""

room_types =  list(set(df['room_type']))
print('Số lượng room_types: ', len(room_types))
print('Liệt kê:', room_types)

room_type_group = df.groupby('room_type')['id'].count().reset_index()
room_type_group.rename(columns={'id': 'customer_number'}, inplace=True)
room_type_group['percentage'] = room_type_group['customer_number'] / room_type_group['customer_number'].sum() * 100
room_type_group

room_type_group.plot(x='room_type', y=['customer_number'], kind='bar')

"""*Nhận xét: Loại phòng Shared room có lượt thuê thấp nhất, trong khi hai loại còn lại thì có số lượt thuê cao và xấp xỉ nhau và loại phòng Private room thì ít hơn so với Entire home/apt khoảng 2500 lượt thuê.

3. Giá trung bình mỗi đêm là bao nhiêu?
"""

price_per_night_mean = df['price']
print('Giá trung bình mỗi đêm: ', price_per_night_mean.mean())

price_per_night_mean_types = df.groupby("room_type")['price'].mean().reset_index()
print('Giá trung bình mỗi đêm theo loại phòng:')
price_per_night_mean_types

"""4. Có sự khác biệt gì giữa lưu trú tại Shared room và Entire Room giữa các
vùng lân cận?
"""

#Tính tổng số lượt khách ở 2 loại phòng
neighbourhood_SharedRoom =  df[df['room_type'] == 'Shared room'].groupby('neighbourhood')['id'].count().reset_index(name='Shared room')
neighbourhood_EntiredRoom =  df[df['room_type'] == 'Entire home/apt'].groupby('neighbourhood')['id'].count().reset_index(name = 'Entire home/apt')
#Gộp lại với nhau
outer_merged = pd.merge(neighbourhood_SharedRoom, neighbourhood_EntiredRoom, how="outer", on="neighbourhood")
#Thay những trường N/A bằng giá trị 0
outer_merged = outer_merged.fillna(0)
outer_merged

outer_merged.describe()

"""*Nhận xét sự khác biệt: ở các vùng lân cận thì số lượt thuê tại shared room đều thấp hơn nhiều so với Entire home

5. Giá trung bình cho các Private room như thế nào? LIệt kê bảng dữ liệu và vẽ
biểu đồ so sánh.
"""

private_room_df = df[df['room_type'] == 'Private room']
print('Giá trung bình cho các Private room là: ', private_room_df['price'].mean())

#Bảng dữ liệu của cột price
private_room = private_room_df['price'].reset_index()
private_room = private_room.drop('index', axis=1)
private_room

private_room.describe()

#Qua kiểm tra thì ta xác định khoảng phù hợp để lập biểu đồ là từ 0 đến 10000
#Biểu đồ so sánh
import matplotlib.pyplot as plt

plt.hist(private_room['price'], bins=range(0,10000,20), log=True)
plt.plot()
plt.show()

#Giới hạn biểu đồ so sánh ở phạm vi dưới 2000
plt.hist(private_room['price'], bins=range(0,2000,20), log=True)
plt.plot()
plt.show()

private_room.mode()

"""*Nhận xét: nhìn chung giá của Private room thường dưới 1000, và 50 là mức giá phổ biến nhất

6. Vùng nào là nơi lưu trú rẻ nhất?
"""

prices  = df.groupby("neighbourhood_group").mean()["price"]

prices[prices==prices.min()]

"""Vùng có giá lưu trú rẻ nhất là Bronx với giá trung bình là 87.497

7. Giá trung bình của từng loại phòng ở các vùng lân cận?
"""

#Tính trung bình từng loại phòng
neighbourhood_entire_mean_price =  df[df['room_type'] == 'Entire home/apt'].groupby('neighbourhood')['price'].mean().reset_index(name='Entire home/apt')
neighbourhood_share_mean_price =  df[df['room_type'] == 'Shared room'].groupby('neighbourhood')['price'].mean().reset_index(name='Shared room')
neighbourhood_private_mean_price =  df[df['room_type'] == 'Private room'].groupby('neighbourhood')['price'].mean().reset_index(name='Private room')
#Tính trung bình chung
neighbourhood_mean_price = df.groupby('neighbourhood')['price'].mean().reset_index(name='mean price')

#Ghép các trung bình từng loại phòng với nhau
outer_merged2 = pd.merge(neighbourhood_mean_price, neighbourhood_entire_mean_price, how="outer", on="neighbourhood")
outer_merged2 = pd.merge(outer_merged2, neighbourhood_share_mean_price, how="outer", on="neighbourhood")
outer_merged2 = pd.merge(outer_merged2, neighbourhood_private_mean_price, how="outer", on="neighbourhood")
outer_merged2

"""- Kết luận các điểm chính quan sát được từ dữ liệu từ các gợi ý câu 4


"""

print('Số lượng vùng lân cận có Shared room hoặc Entire home/apt: ', len(outer_merged))
len1 = len(outer_merged[outer_merged['Shared room'] > outer_merged['Entire home/apt']])
print('Số lượng vùng lân cận mà Shared room nhiều hơn Entire home/apt: ', len1)
print('Số lượng vùng lân cận mà Entire home/apt nhiều hơn Shared room: ', len(outer_merged) - len1)

#Kiểm tra những vùng lân cận số số lượng Shared room nhiều hơn Entire home/apt
outer_merged[outer_merged['Shared room'] > outer_merged['Entire home/apt']]

"""Kết luận: Số lượt thuê tại shared room đều thấp hơn nhiều so với Entire home (số liệu 2 so với 215), tuy nhiên tại những vùng lân cận ở trên thì Shared room được ưu chuộng hơn"""